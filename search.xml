<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Render(3D世界的图片是如何被现实出来的)</title>
    <url>/2020/12/04/render/</url>
    <content><![CDATA[<h1 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h1><h2 id="出发点"><a href="#出发点" class="headerlink" title="出发点"></a>出发点</h2><p>渲染属于计算机图形学的范畴，本身涉及到很多的坐标转换等计算，本次记录不做具体的数学推导，只做一个原理的记录，仅为了方面搞明白图像处理中的边界问题。<br><a id="more"></a></p>
<h2 id="渲染的专业理解"><a href="#渲染的专业理解" class="headerlink" title="渲染的专业理解"></a>渲染的专业理解</h2><p>先甩出渲染管线的专业解释：<br><strong>将三维场景中的模型，按照设定好的环境、灯光、材质及渲染参数。二维投影成数字图像的过程</strong>。之所以是2D图像，是因为我们的屏幕是2D的，因此我们需要通过2D屏幕来呈现3D场景</p>
<h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><h3 id="物理成像理解"><a href="#物理成像理解" class="headerlink" title="物理成像理解"></a>物理成像理解</h3><p>可以想一下我们如何拍照(因为这就是一个渲染的过程)。<br>a.首先是找到要拍照的物体，比如人；<br>b.调整好相机角度；<br>c.卡擦，拍照。  </p>
<p>在计算机中，我们最终要成像，其实也是这么一个过程，里面的本地坐标和世界坐标转换等操作等操作都是为了模拟完成现实中的操作。<br><strong>请记住上面讲的实际的一个拍照成像过程，因为下面计算机的成像过程就是对物理世界的一个模仿和复现</strong></p>
<h3 id="基础知识储备"><a href="#基础知识储备" class="headerlink" title="基础知识储备"></a>基础知识储备</h3><p>我们小学老师都教过关于点、线、面的知识。  </p>
<ol>
<li>要构成一条直线，至少两个点。  </li>
<li>要构成一个面，至少三个点。<br><img src="/images/渲染管线/点.png" alt=""><img src="/images/渲染管线/面.png" alt=""></li>
</ol>
<p>一个3维实体就是有无数面构成的，所以在计算机图形学中，构成图像成像的最小单元就是三角形。<br><img src="/images/渲染管线/3d小球.png" alt=""></p>
<h3 id="问题锁定"><a href="#问题锁定" class="headerlink" title="问题锁定"></a>问题锁定</h3><p>要搞明白计算机如何现实一张图片出来，其实本质就是如何将这些三角形表示到屏幕上，那好办，只要我弄明白一个三角形是如何现实出来，就知道一幅图是如何现实出来了。</p>
<h3 id="渲染过程"><a href="#渲染过程" class="headerlink" title="渲染过程"></a>渲染过程</h3><p>惯例甩出一张图<br><img src="/images/渲染管线/成像.jpg" alt=""><br>同样和现实做一个对应：<br>现实中的相机—对应这里的白色小块，我们可以将它比作相机。<br>现实中的被拍物体—对应这里的三角形。<br>现实中的拍照成像—对应这里的中间的屏幕，可以看作就是显示屏。</p>
<p>在实际成像中，现实世界中要拍照成像，是要依托光线的，如果没有光线，将无法成像，在这里，左侧的白色块状物可以比作我们的相机，中间是就是我们的显示屏(2D屏幕)，三角形就是我们要拍照的物体，相机发出的光照射到三角形上，同时通过顶点的光线与屏幕相交于三个点，这三个点就是3D世界的三角形映射到2D世界上的一个呈现。将三个点相连，得到的就是屏幕上的三角形<br><img src="/images/渲染管线/渲染.jpg" alt=""></p>
<p>将格子作为像素之类的比方，可以知道，这样三角形就被现实到屏幕上，真实物体都是有无数的三角形作为基础构成，所以通过将所有的三角形在通过同样的方法投影出来，那么物体的照片就会被展示出来，这里其实还有很多问题没有讲，比如三角形在空间中的遮挡问题如何解决等，这些先不做讲解，只要记住最朴素的原理就好。<br><img src="/images/渲染管线/多个三角形.jpg" alt=""></p>
<h3 id="三角形的粒度问题"><a href="#三角形的粒度问题" class="headerlink" title="三角形的粒度问题"></a>三角形的粒度问题</h3><p>现在还有一个问题要讲解一下，关于这个最小单元的三角形，到底有多小？太大会则么样？</p>
<p>这其实是一个很重要的问题，关系到图片现实的质量，尤其是边界问题，<br><img src="/images/渲染管线/rend1.gif" alt=""><br><img src="/images/渲染管线/rend2.gif" alt=""><br>可以看出三角形越小，最终被渲染出的图片越精细和真实，那具体如何做到呢？<br>这是一个网格细分的问题，有很多技术可以做到这样的细分，也有很多优秀的算法，比如loop网格细分技术等，这里不做过多的了解。<br><img src="/images/渲染管线/三角形插值.png" alt=""><br>你可以理解为，一个三角形如果要细分出更小的三角形，最方便的方法就是找到每一条边的中点，连接起来，那么一个三角形将编程四个三角形，达到三角形细分的作用。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>讲到这里也达到了我们的目的了，目的是为了引出最后的三角形细分的知识，因为它类似于图像处理中的边界问题，有点像插值技术。在图像处理中，尤其是医学图像处理中，由于噪声和边界模糊等问题，边界的识别一直是一个值得去思考的问题。仅此记录，便于理解PointRend技术。</p>
]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>-render -渲染 -计算机图形学</tag>
      </tags>
  </entry>
  <entry>
    <title>交叉熵的由来</title>
    <url>/2020/12/02/%E4%BA%A4%E5%8F%89%E7%86%B5%E7%9A%84%E7%94%B1%E6%9D%A5/</url>
    <content><![CDATA[<h2 id="克劳德·艾尔伍德·香农"><a href="#克劳德·艾尔伍德·香农" class="headerlink" title="克劳德·艾尔伍德·香农"></a>克劳德·艾尔伍德·香农</h2><p>网上有句话说，爱因斯坦发明了相对论，但却没能把我们带进相对论的时代；而香农开创了信息论，且把人类带入了信息的时代，不是说二者谁更厉害，而是香农的地位远比我们想的要高得多，如果有兴趣，推荐读一读《香农传》，可能了解那个时代的背景，自然会对那时候的论点有更深刻的认识。</p>
<p>香农熵<br>香农熵其实本意是信息熵，但是关于熵的概念最初不是应用在信息论中，而是物理化学中，下面先看看最初熵的概念</p>
<p>物理熵(各自瞎起名)<br>物理中的熵表示的是分子在空间中的位置不确定性，不确定性越高，熵越高，反之则越小，比如固体的不确定性低，液体次之，气体则很高，因为气体中的分子相对固体液体，显得更加活跃。</p>
<p>信息熵<br>信息熵中不是描述分子中的位置不确定行，而是和信息有密切关系，既然和信息相关，那我就以语言来进行举例说明，因为语言就是人类用来传递信息的，<br>我理解的信息熵：信息熵基于具体场景下确定结果的信息总量。听着可能有点绕口，下面逐个解释<br>如下图所示<br><img src="/images/交叉熵/盒子里的字母.png" alt=""></p>
<p>现在做一个实验，在不同的盒子中，取出一个字母。<br>假设一种取出字母的具体结果：A,所以在这里A就是确定的结果<br>那具体的场景是什么，这里具体的场景就是三堆不同的字母结合，在第一堆里是一个具体的场景，第二堆是一个具体的场景等。<br>现在采取问答的方式，来确定信息总量，你可以想作是一个人看着场景里的字母，要问多少句话，才能猜到取出来的这个字母具体是什么，好比是猜谜语游戏。</p>
<p>对于第一堆(第一个具体场景)：<br>张三问：其实不用问就知道结果，因为张三是看着这个场景发问，他已经知道这里只有A,自然可以准确猜到取出的数字就是A，<br>所以张三不用向外界获取任何信息，所以信息熵是最小的</p>
<p>对于第二个堆（第二个具体场景）:<br>张三问：是B吗？抽签人回答不是<br>张三问：是C吗？抽签人回答不是<br>张三问：是D吗？抽签人回答不是<br>这时张三才能确定抽签人抽到的是A，所以需要香外界获取三条信息，这时可能会有人问，如果这个人一开口就问是不是A，抽签人回答是，那只需要一条信息就能确定答案，以及还有其他的发问的方式，我理解的是，这个具体场景里本来就有四种字母，所以张三第一次就问到是不是A的，也是一个概率问题，这就为信息熵和概率直接的关系打下了基础，下面会接着讲，这里只需要知道，相比于第一堆的场景，第二堆不确定性更大，至少是要问一个问题才能确定答案，所以信息熵比第一个场景大，第三堆我们也就不说了，只要知道他的信息熵比第一种大就行，这就是熵和信息的关联。</p>
<p>知道熵和信息的具体关联后，要如何将信息熵与数学结合起来？<br>信息熵和概率问题</p>
<p>看如图三个杯子里分别有四个小球<br><img src="/images/交叉熵/盒子里的小球1.png" alt=""></p>
<p>做一个实验，每次取出一个小球放回，取四次，四次取出的结果顺序和杯子里小球的顺序为一样的概率是多少？<br>根据之前的套路<br>具体的结果:取出顺序和杯子里小球的顺序一样<br>具体的场景：第一个杯子，第二个杯子，第三个杯子<br>对于第一个杯子(第一个具体场景)：<br>具体结果：红红红红<br>概率：</p>
<p>$p=x+y$</p>
]]></content>
  </entry>
  <entry>
    <title>医学图像分类</title>
    <url>/2020/12/07/%E5%8C%BB%E5%AD%A6%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<p>在医学图像中会有很多的分类,不同种类有不同的特点和用途，下面做一个简单的概述和总结<br><a id="more"></a></p>
<h2 id="普通分类"><a href="#普通分类" class="headerlink" title="普通分类"></a>普通分类</h2><p>包括医学图像意外的图像，最常见的分类是将其分为：二值图像（Binary image）,灰度图像（gray level image），彩色图像（color image），伪彩图像（false color image）。</p>
<h3 id="二值图像（Binary-image）"><a href="#二值图像（Binary-image）" class="headerlink" title="二值图像（Binary image）"></a>二值图像（Binary image）</h3><p>从名字直观理解，顾名思义就是只有两个值，假设只有0，1，0代表黑，1，代表白，或者0代表背景，1代表前景，这里需要表明二值图像不一定是0和1，也可以是其他的，只要图像只有两个值，就可以认为是二值图像，加上1一般无法从屏幕表示出来，通常1也被处理成255。<br><img src="/images/医学图像分类/binary.png" alt=""></p>
<h3 id="灰度图像（gray-level-image）"><a href="#灰度图像（gray-level-image）" class="headerlink" title="灰度图像（gray level image）"></a>灰度图像（gray level image）</h3><p>灰度图像是以0-255的灰阶表示，由于只包含单一通道信息，每个像素只有一个采样颜色的图像。对于“单一通道”，可以理解为是单一波长的电磁波成像，所以你可以看到CT,MRI,超声这些都是灰度图 。这类图像通常显示为从最暗黑色到最亮的白色的灰度，所以层次相比于二值图像更家丰富，从照片上来看也更加柔和。<br><img src="/images/医学图像分类/gray.png" alt=""></p>
<h3 id="彩色图像（color-image）"><a href="#彩色图像（color-image）" class="headerlink" title="彩色图像（color image）"></a>彩色图像（color image）</h3><p>彩色图像，可以看作是三个通道的灰度图的叠加，所以信息比灰度图又更加丰富<br><img src="/images/医学图像分类/color.png" alt=""></p>
<h3 id="伪彩图像（false-color-image）"><a href="#伪彩图像（false-color-image）" class="headerlink" title="伪彩图像（false color image）"></a>伪彩图像（false color image）</h3><p>对我个人理解，伪彩色是由我们人为的制造出来，而不是真实世界显示出的真彩色，那为什么要制造出这种伪彩图片呢？那当然是需求啦，人眼在分辨彩色的能力上很强，近乎可以分辨出上千中色彩，但是在分变灰度上，却很弱，据调查人眼只能分辨20多个灰度级，但是一张灰度图中却和彩色图像一样包含了上千个灰度级，所以伪彩色诞生了，通过将灰度图处理为伪彩图片，可以掌握更多的原始灰度图信息，所以一般伪彩图片都是对灰度图的处理。<br>  下图中是夜视仪下的一张灰度图，可以显示出温度的分布，从灰度图中可以看到，白色的代表温度高一些，为了更加细致和方便观察，通常转为伪彩图片(左)，温度分布更大明显。<br><img src="/images/医学图像分类/false_color.png" alt=""></p>
<h2 id="传感器的差别"><a href="#传感器的差别" class="headerlink" title="传感器的差别"></a>传感器的差别</h2><p>从所使用的传感器不同，可分为：光学图像（optical），红外图像（infrared），紫外图像（ultraviolet），x光（x-ray），雷达（radar），MRI（RF），超声图像（ultrasound），微波图像（microwave）等。<br>每一种图片都有不同的用途和特点。由于传感器最终都是搭载到平台上，所以具体会在传感器平台分类那一节做一个简单介绍。</p>
<h2 id="维度差别"><a href="#维度差别" class="headerlink" title="维度差别"></a>维度差别</h2><p>从维度上，可分为：2D,3D,4D</p>
<h2 id="传感器平台"><a href="#传感器平台" class="headerlink" title="传感器平台"></a>传感器平台</h2><p>根据搭载的传感器的平台的差异，可分为：卫星图片（satellite(geography)），显微镜图片（microscope），X光片(x-ray film),核磁共振图片（MRI—machine）等。</p>
<h3 id="显微镜图片"><a href="#显微镜图片" class="headerlink" title="显微镜图片"></a>显微镜图片</h3><p>显然这是通过显微镜来进行成像，通常是用来观察一些细小组织，比如花粉细胞等。能够很好的展示细小物体的结构特征。</p>
<h3 id="微波图像（microwave），雷达（radar），光学图像（optical）"><a href="#微波图像（microwave），雷达（radar），光学图像（optical）" class="headerlink" title="微波图像（microwave），雷达（radar），光学图像（optical）"></a>微波图像（microwave），雷达（radar），光学图像（optical）</h3><p>下图是三种不同技术在关于冰面覆盖下的海岸线的成像，可以看出光学图片下，几乎看不到海岸线，因为冰覆盖了海岸线，在雷达成像中能稍微看清海岸线，在微波成像下，海岸线越发清晰，所以不同的图片，展示的细节也不一样，用途不一样。<br><img src="/images/医学图像分类/optical_radar_micr.png" alt=""></p>
<h3 id="x-ray-CT-MRI-uv"><a href="#x-ray-CT-MRI-uv" class="headerlink" title="x-ray CT,MRI,uv"></a>x-ray CT,MRI,uv</h3><p>对于x-ray来说其实，是利用了x光线的成像原理，伦琴在某种巧合下发现了x射线可以穿透人体身体，后来医学界利用其人体内部对x涉嫌的吸收程度的区别，骨骼对x涉嫌的吸收多一些，软组织则少一些，拍出来的片子，暗一点的是骨骼，明一点的是组织，达到了一个很好的区分<br><img src="/images/医学图像分类/x-ray.png" alt=""></p>
<p>对于CT图来说呢，准确应该叫x-ray CT，其本质还是靠x光成像，所以和x-ray一样，便于区分骨骼，但是和x-ray的区别在于，CT是通过不同方位的拍片，然后再计算，最后形成一个断面图，这样能够更好的掌握内部细节。<br><img src="/images/医学图像分类/ct.png" alt=""></p>
<p>对于uv(超声)来说，相比与其他的医学成像，其噪声等更大，需要更加专业的人士才能看明白，但是他有别于x-ray和CT的地方是，它是绿色的，不含辐射，而且具有随时间实时成像的特性，所以一般孕检都会采用超声。<br><img src="/images/医学图像分类/ultrsound.png" alt=""></p>
<p>最后讲一讲MRI(磁共振),MRI的机器和CT很像，都是一个大滚筒样式，目的是为了机器内部传感器转动，能够多方位拍片，最后显示出一个断面图，但是相比于CT来说，它对观察软组织更加有利。还有一个很好的特点：无辐射，但是价格很贵。还没看病，拍片就得上千块。由于其成像原理是依托于核磁共振，所以如果你人体内部有钢板植入或者是类似心脏起搏器这样的钛钢类东西，基本就没法再享受MRI了。<br><img src="/images/医学图像分类/mri.png" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>每一种医学成像技术原理都不尽相同，得到的图片含有的信息也有差异。在图像处理过程中，第一步往往就是预处理，只有深度掌握不同成像的图片，才能科学的进行预处理，为后续工作做铺垫。</p>
]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>-医学图像分类 -CT -MRI -x-ray -uv</tag>
      </tags>
  </entry>
  <entry>
    <title>什么是神经网络</title>
    <url>/2020/12/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>本篇博文仅对深度学习中的几个简单的名字做一个朴素的解释和理解</p>
<a id="more"></a>
<h2 id="生物神经网络的工作模式"><a class="markdownIt-Anchor" href="#生物神经网络的工作模式"></a> 生物神经网络的工作模式</h2>
<p>神经网络的发现可以说是将人工智能又拔高了一个度，现今很多了不起的成果都是在此之上完成的，那它是如何被发现的呢？既然 是“神经”，自然可以联想到人体里面的的神经，及生物神经。</p>
<p>人体中的信息传导都是通过神经元来完成的，所以每个神经元都和其他多个神经元进行连接，信号就这样通过一个神经元接着一个神经元的往下传递，那是不是所有的信号都能被一直传递下去呢，显然不是，不然这样神经元就太敏感了，你可以想象，如果任何信息都能激活神经元进行往下的信息传到，那你随时都会很兴奋。无时无刻的兴奋，所以每个神经元都会有一个阈值，超过阈值了，才会把信息往下传递，这也就是我们现在所说的“激活”。下面做一个小总结：</p>
<ol>
<li> 单个神经元的输入为连接它的多个神经元的输入某种加和</li>
<li> 神经元要被激活，输入值必须超过其自身设定的阈值</li>
</lo>
<p><img src="/images/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%9C%B4%E7%B4%A0%E7%90%86%E8%A7%A3/%E7%A5%9E%E7%BB%8F%E5%85%83.png" alt="" /></p>
<p>接下来用数学的方式对神经结构做一个简单的量化</p>
<p>假设一个神经元输入连接着三个神经元，数学描述如下<br />
\begin{equation}<br />
\omega <em>{1} x</em>{1} +\omega <em>{2} x</em>{2} +\omega <em>{2} x</em>{2} &lt; d无信号输出<br />
\omega <em>{1} x</em>{1} +\omega <em>{2} x</em>{2} +\omega <em>{2} x</em>{2} &gt; d有信号输出<br />
\end{equation}</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;$&#039; in math mode at position 62: …_{2} x_{2} &lt; d $̲$无信号输出     
$$ …'> \omega _{1} x_{1} +\omega _{2} x_{2} +\omega _{2} x_{2} &lt; d $$无信号输出     
$$ \omega _{1} x_{1} +\omega _{2} x_{2} +\omega _{2} x_{2} &gt; d $$有信号输出  

$$ x_{1}，x_{2}，x_{3}$$表示三个输入的神经元，$$ omega _{1}，omega _{2}，omega _{3} $$表示三个神经元的权重，d则表示神经元的阈值。只有最终的输入超过这个神经元的阈值，才会有信号输出，至于输出什么信号？在我们人体内的神经元中，根据科学家的研究，其实输出的信号就是0和1，有信号时输出1，无信号时就是0。

再对**权重**做一个简要说明，至于为什么需要权重，这是因为每个神经元起到的决策重要性不同，所以权重不同，就好比，老板下面有三个员工，有一个和老板亲近一些，自然老板听取它的意见的几率就大一些，也就是权重就大一些。
![](/images/神经网络的朴素理解/单个神经元.png)
那权重该怎么解释呢？之前我们说权重是为信号的传输设置的一个“门槛”，让人不至于什么信号都会往下传，这样人会无休止的兴奋，所以要有选择的往下传，重要的才传递，这才出现了**阈值**。继续拿老板和员工做举例，员工向老板提意见，虽然员工有的和老板很亲近，意见也就容易被采纳，但是老板会考虑到一个问题，不是员工忠不忠诚的问题，而是员工得到信息的途径的真实性问题，如果这个消息本身就不靠谱，那员工也可能会被蒙蔽，所以自然需要一个阈值来过滤到一些干扰，数学上被叫做“噪声”。

那接下来，对数学表达式做一个整理和移项
$$ y=u(\omega _{1} x_{1} +\omega _{2} x_{2} +\omega _{2} x_{2} - d) </p>
<p>这里后面后一个负号，表达中我们一般想尽量用正号来表示，所以再进行整理d=-d,那么最终</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>u</mi><mo stretchy="false">(</mo><msub><mi>ω</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>ω</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=u(\omega _{1} x_{1} +\omega _{2} x_{2} +\omega _{2} x_{2} + d) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></span></p>
<p>这里的函数u(x)是该如何解释呢？因为神经元最终的输出只能是0或者1，但是$$ \omega <em>{1} x</em>{1} +\omega <em>{2} x</em>{2} +\omega <em>{2} x</em>{2} - d $$可以是任何数，所以需要进行转换,如下图所示，这里其实就是一个单位阶跃函数，当$$ \omega <em>{1} x</em>{1} +\omega <em>{2} x</em>{2} +\omega <em>{2} x</em>{2} $$大于d时，输出1，小于d时，输出0，这样就达到了我们的目的。同时也引出了另一个重要的概念：<strong>激活函数</strong>，这里的u(x)就是激活函数.至此神经网络的表达雏形已经出现了。<br />
<img src="/images/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%9C%B4%E7%B4%A0%E7%90%86%E8%A7%A3/%E5%8D%95%E4%BD%8D%E9%98%B6%E8%B7%83%E5%87%BD%E6%95%B0.jpg" alt="" /></p>
<h2 id="人工神经网络的工作模式"><a class="markdownIt-Anchor" href="#人工神经网络的工作模式"></a> 人工神经网络的工作模式</h2>
<p>依据生物神经网络，可以画出人工神经元了<br />
<img src="/images/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%9C%B4%E7%B4%A0%E7%90%86%E8%A7%A3/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E5%85%83.png" alt="" /><br />
深度学习中的神经网络，是通过模仿生物神经网络的来的，至于和其有什么不同，有很多，但是我们只需要知道其中的几个点。首先不同的地方是阈值，生物神经网络中阈值只能是正数，但是人工神经网络中阈值可以是正数负数，至于为什么，因为神经网络是一个学习的过程，个中的参数是通过不断的迭代学习得到，所以不一定是正数。其次不同的地方是激活函数，生物神经网络中，使用了单位阶跃函数，是因为生物神经元输出只有简单的0和1。到了我们人工神经网络，使用最多的是sigmoid，relu,tanh等，至于为什么使用这些函数呢？你可以认为，我们的人工神经元中，不是简单的输出0和1，它是一个学习的过程，就像卷积神经网络中，它需要输出的是一些特征，所以输出可能性更多。那至于到底选择sigmoid,relu,还是tanh？这又和线性模型有关系，可以去看看广义线性模型的知识，通过对噪声，或者说是输出误差的一个分布假设，来找到一个合适的函数来作为我们的一个最合适的后验概率模型，也就是这里的激活函数。</p>
<p>至此我想讲的也基本讲完了，但是也只是讲了神经元的工作方式，那神经网络是该怎样呢，其实神经网络必然就是很多的神经元连接而成，在人工，神经网络中，具体结构如下，其中包含了输入层，隐藏层，输出层。不做详细解释。<br />
<img src="/images/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%9C%B4%E7%B4%A0%E7%90%86%E8%A7%A3/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.png" alt="" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>-深度学习 -神经网络 -Neural Network</tag>
      </tags>
  </entry>
</search>
