<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Render(3D世界的图片是如何被现实出来的)</title>
    <url>/2020/12/04/render/</url>
    <content><![CDATA[<h1 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h1><h2 id="出发点"><a href="#出发点" class="headerlink" title="出发点"></a>出发点</h2><p>渲染属于计算机图形学的范畴，本身涉及到很多的坐标转换等计算，本次记录不做具体的数学推导，只做一个原理的记录，仅为了方面搞明白图像处理中的边界问题。</p>
<h2 id="渲染的专业理解"><a href="#渲染的专业理解" class="headerlink" title="渲染的专业理解"></a>渲染的专业理解</h2><p>先甩出渲染管线的专业解释：<br><strong>将三维场景中的模型，按照设定好的环境、灯光、材质及渲染参数。二维投影成数字图像的过程</strong>。之所以是2D图像，是因为我们的屏幕是2D的，因此我们需要通过2D屏幕来呈现3D场景</p>
<h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><h3 id="物理成像理解"><a href="#物理成像理解" class="headerlink" title="物理成像理解"></a>物理成像理解</h3><p>可以想一下我们如何拍照(因为这就是一个渲染的过程)。<br>a.首先是找到要拍照的物体，比如人；<br>b.调整好相机角度；<br>c.卡擦，拍照。  </p>
<p>在计算机中，我们最终要成像，其实也是这么一个过程，里面的本地坐标和世界坐标转换等操作等操作都是为了模拟完成现实中的操作。<br><strong>请记住上面讲的实际的一个拍照成像过程，因为下面计算机的成像过程就是对物理世界的一个模仿和复现</strong></p>
<h3 id="基础知识储备"><a href="#基础知识储备" class="headerlink" title="基础知识储备"></a>基础知识储备</h3><p>我们小学老师都教过关于点、线、面的知识。  </p>
<ol>
<li>要构成一条直线，至少两个点。  </li>
<li>要构成一个面，至少三个点。<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E7%82%B9.png"><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E9%9D%A2.png"></li>
</ol>
<p>一个3维实体就是有无数面构成的，所以在计算机图形学中，构成图像成像的最小单元就是三角形。<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/3d%E5%B0%8F%E7%90%83.png"></p>
<h3 id="问题锁定"><a href="#问题锁定" class="headerlink" title="问题锁定"></a>问题锁定</h3><p>要搞明白计算机如何现实一张图片出来，其实本质就是如何将这些三角形表示到屏幕上，那好办，只要我弄明白一个三角形是如何现实出来，就知道一幅图是如何现实出来了。</p>
<h3 id="渲染过程"><a href="#渲染过程" class="headerlink" title="渲染过程"></a>渲染过程</h3><p>惯例甩出一张图<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E6%88%90%E5%83%8F.jpg"><br>同样和现实做一个对应：<br>现实中的相机–对应这里的白色小块，我们可以将它比作相机。<br>现实中的被拍物体–对应这里的三角形。<br>现实中的拍照成像–对应这里的中间的屏幕，可以看作就是显示屏。</p>
<p>在实际成像中，现实世界中要拍照成像，是要依托光线的，如果没有光线，将无法成像，在这里，左侧的白色块状物可以比作我们的相机，中间是就是我们的显示屏(2D屏幕)，三角形就是我们要拍照的物体，相机发出的光照射到三角形上，同时通过顶点的光线与屏幕相交于三个点，这三个点就是3D世界的三角形映射到2D世界上的一个呈现。将三个点相连，得到的就是屏幕上的三角形<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E6%B8%B2%E6%9F%93.jpg"></p>
<p>将格子作为像素之类的比方，可以知道，这样三角形就被现实到屏幕上，真实物体都是有无数的三角形作为基础构成，所以通过将所有的三角形在通过同样的方法投影出来，那么物体的照片就会被展示出来，这里其实还有很多问题没有讲，比如三角形在空间中的遮挡问题如何解决等，这些先不做讲解，只要记住最朴素的原理就好。<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E5%A4%9A%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.jpg"></p>
<h3 id="三角形的粒度问题"><a href="#三角形的粒度问题" class="headerlink" title="三角形的粒度问题"></a>三角形的粒度问题</h3><p>现在还有一个问题要讲解一下，关于这个最小单元的三角形，到底有多小？太大会则么样？</p>
<p>这其实是一个很重要的问题，关系到图片现实的质量，尤其是边界问题，<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/rend1.gif"><br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/rend2.gif"><br>可以看出三角形越小，最终被渲染出的图片越精细和真实，那具体如何做到呢？<br>这是一个网格细分的问题，有很多技术可以做到这样的细分，也有很多优秀的算法，比如loop网格细分技术等，这里不做过多的了解。<br><img src="/images/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E4%B8%89%E8%A7%92%E5%BD%A2%E6%8F%92%E5%80%BC.png"><br>你可以理解为，一个三角形如果要细分出更小的三角形，最方便的方法就是找到每一条边的中点，连接起来，那么一个三角形将编程四个三角形，达到三角形细分的作用。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>讲到这里也达到了我们的目的了，目的是为了引出最后的三角形细分的知识，因为它类似于图像处理中的边界问题，有点像插值技术。在图像处理中，尤其是医学图像处理中，由于噪声和边界模糊等问题，边界的识别一直是一个值得去思考的问题。仅此记录，便于理解PointRend技术。</p>
]]></content>
  </entry>
  <entry>
    <title>交叉熵的由来</title>
    <url>/2020/12/02/%E4%BA%A4%E5%8F%89%E7%86%B5%E7%9A%84%E7%94%B1%E6%9D%A5/</url>
    <content><![CDATA[<h2 id="克劳德·艾尔伍德·香农"><a href="#克劳德·艾尔伍德·香农" class="headerlink" title="克劳德·艾尔伍德·香农"></a>克劳德·艾尔伍德·香农</h2><p>网上有句话说，爱因斯坦发明了相对论，但却没能把我们带进相对论的时代；而香农开创了信息论，且把人类带入了信息的时代，不是说二者谁更厉害，而是香农的地位远比我们想的要高得多，如果有兴趣，推荐读一读《香农传》，可能了解那个时代的背景，自然会对那时候的论点有更深刻的认识。</p>
<p>香农熵<br>香农熵其实本意是信息熵，但是关于熵的概念最初不是应用在信息论中，而是物理化学中，下面先看看最初熵的概念</p>
<p>物理熵(各自瞎起名)<br>物理中的熵表示的是分子在空间中的位置不确定性，不确定性越高，熵越高，反之则越小，比如固体的不确定性低，液体次之，气体则很高，因为气体中的分子相对固体液体，显得更加活跃。</p>
<p>信息熵<br>信息熵中不是描述分子中的位置不确定行，而是和信息有密切关系，既然和信息相关，那我就以语言来进行举例说明，因为语言就是人类用来传递信息的，<br>我理解的信息熵：信息熵基于具体场景下确定结果的信息总量。听着可能有点绕口，下面逐个解释<br>如下图所示<br><img src="/images/%E4%BA%A4%E5%8F%89%E7%86%B5/%E7%9B%92%E5%AD%90%E9%87%8C%E7%9A%84%E5%AD%97%E6%AF%8D.png"></p>
<p>现在做一个实验，在不同的盒子中，取出一个字母。<br>假设一种取出字母的具体结果：A,所以在这里A就是确定的结果<br>那具体的场景是什么，这里具体的场景就是三堆不同的字母结合，在第一堆里是一个具体的场景，第二堆是一个具体的场景等。<br>现在采取问答的方式，来确定信息总量，你可以想作是一个人看着场景里的字母，要问多少句话，才能猜到取出来的这个字母具体是什么，好比是猜谜语游戏。</p>
<p>对于第一堆(第一个具体场景)：<br>张三问：其实不用问就知道结果，因为张三是看着这个场景发问，他已经知道这里只有A,自然可以准确猜到取出的数字就是A，<br>所以张三不用向外界获取任何信息，所以信息熵是最小的</p>
<p>对于第二个堆（第二个具体场景）:<br>张三问：是B吗？抽签人回答不是<br>张三问：是C吗？抽签人回答不是<br>张三问：是D吗？抽签人回答不是<br>这时张三才能确定抽签人抽到的是A，所以需要香外界获取三条信息，这时可能会有人问，如果这个人一开口就问是不是A，抽签人回答是，那只需要一条信息就能确定答案，以及还有其他的发问的方式，我理解的是，这个具体场景里本来就有四种字母，所以张三第一次就问到是不是A的，也是一个概率问题，这就为信息熵和概率直接的关系打下了基础，下面会接着讲，这里只需要知道，相比于第一堆的场景，第二堆不确定性更大，至少是要问一个问题才能确定答案，所以信息熵比第一个场景大，第三堆我们也就不说了，只要知道他的信息熵比第一种大就行，这就是熵和信息的关联。</p>
<p>知道熵和信息的具体关联后，要如何将信息熵与数学结合起来？<br>信息熵和概率问题</p>
<p>看如图三个杯子里分别有四个小球<br><img src="/images/%E4%BA%A4%E5%8F%89%E7%86%B5/%E7%9B%92%E5%AD%90%E9%87%8C%E7%9A%84%E5%B0%8F%E7%90%831.png"></p>
<p>做一个实验，每次取出一个小球放回，取四次，四次取出的结果顺序和杯子里小球的顺序为一样的概率是多少？<br>根据之前的套路<br>具体的结果:取出顺序和杯子里小球的顺序一样<br>具体的场景：第一个杯子，第二个杯子，第三个杯子<br>对于第一个杯子(第一个具体场景)：<br>具体结果：红红红红<br>概率：</p>
<p>$p=x+y$</p>
]]></content>
  </entry>
</search>
